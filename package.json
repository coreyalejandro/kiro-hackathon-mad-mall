{
  "name": "kiro hackathon-mad-mall",
  "scripts": {
    "affected:build": "pnpm exec projen affected:build",
    "affected:lint": "pnpm exec projen affected:lint",
    "affected:test": "pnpm exec projen affected:test",
    "build": "pnpm exec projen build",
    "build:all": "pnpm exec projen build:all",
    "clean": "pnpm exec projen clean",
    "clobber": "pnpm exec projen clobber",
    "compile": "pnpm exec projen compile",
    "default": "pnpm exec projen default",
    "dev": "pnpm exec projen dev",
    "eject": "pnpm exec projen eject",
    "eslint": "pnpm exec projen eslint",
    "graph": "pnpm exec projen graph",
    "lint:all": "pnpm exec projen lint:all",
    "package": "pnpm exec projen package",
    "post-compile": "pnpm exec projen post-compile",
    "post-upgrade": "pnpm exec projen post-upgrade",
    "pre-compile": "pnpm exec projen pre-compile",
    "run-many": "pnpm exec projen run-many",
    "setup": "pnpm exec projen setup",
    "test": "pnpm exec projen test",
    "test:all": "pnpm exec projen test:all",
    "upgrade": "pnpm exec projen upgrade",
    "upgrade-deps": "pnpm exec projen upgrade-deps",
    "watch": "pnpm exec projen watch",
    "local:list": "docker compose -f docker-compose.localstack.yml up -d",
    "local:down": "docker compose -f docker-compose.localstack.yml down",
    "local:bootstrap": "cross-env ENVIRONMENT=development ts-node scripts/bootstrap-local.ts",
    "dev:infra": "pnpm run local:list && pnpm run local:bootstrap",
    "dev:web": "pnpm --filter @madmall/web-app dev",
    "dev:all": "pnpm run dev:infra && pnpm run dev:web",
    "dev:watch": "pnpm -r --if-present watch",
    "setup:env": "[ -f .env ] || cp .env.example .env; [ -f packages/web-app/.env.local ] || cp packages/web-app/.env.local.example packages/web-app/.env.local",
    "localstack:up": "docker compose up -d localstack",
    "localstack:down": "docker compose down",
    "localstack:logs": "docker compose logs -f localstack | cat",
    "env:copy": "[ -f .env ] || cp .env.example .env",

    "install:ci": "pnpm exec projen install:ci",
    "synth-workspace": "pnpm exec projen",
    "dev:localstack": "docker compose -f docker-compose.local.yml up -d",
    "dev:local": "ENVIRONMENT=dev AWS_REGION=us-east-1 AWS_ACCESS_KEY_ID=test AWS_SECRET_ACCESS_KEY=test pnpm -w run dev",
    "dev:infra:deploy": "cd packages/infrastructure && cdk deploy --all --require-approval never -c environment=dev",
    "dev:infra:destroy": "cd packages/infrastructure && cdk destroy --all -c environment=dev --force",
    "docs:api": "cd packages/api-gateway && pnpm run generate && cp -f generated/openapi.json ../docs/openapi.json || true"
  },
  "devDependencies": {
    "@aws-sdk/client-dynamodb": "^3.883.0",
    "@aws-sdk/client-s3": "^3.886.0",
    "@aws/pdk": "^0.26.14",
    "@types/node": "^18",
    "@typescript-eslint/eslint-plugin": "^7",
    "@typescript-eslint/parser": "^7",
    "constructs": "^10.0.0",
    "cross-env": "^7.0.3",
    "eslint": "^8",
    "eslint-config-prettier": "^10.1.8",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^5.5.4",
    "npm-check-updates": "^18.0.3",
    "nx": "19.0.0",
    "prettier": "^3.6.2",
    "projen": "^0.82.8"
  }
}